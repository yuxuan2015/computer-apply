ubuntu16.04安装cuda
http://www.52nlp.cn/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E4%B8%BB%E6%9C%BA%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-ubuntu-16-04-nvidia-gtx-1080-cuda-81 准备条件
	1.1 检查自己的GPU是否是CUDA-capable
	lspci | grep -i nvidia
	会显示自己的NVIDIA GPU版本信息

	1.2 检查自己的系统中是否装了gcc
		gcc -version
		sudo apt-get install gcc安装

2 更新软件源
	2.1 加入官方ppa源：
	sudo add-apt-repository ppa:graphics-drivers/ppa
	
	2.2 
	cd /etc/apt/ && sudo cp sources.list sources.list.bak && sudo gedit sources.list
	
	ubuntu的源列表
	http://wiki.ubuntu.org.cn/%E6%BA%90%E5%88%97%E8%A1%A8
        清华源：https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/
	
	把下面的这些源添加到source.list文件头部：
	# deb cdrom:[Ubuntu 16.04 LTS _Xenial Xerus_ - Release amd64 (20160420.1)]/ xenial main restricted
	deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted
	deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted
	deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial universe
	deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates universe
	deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial multiverse
	deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates multiverse
	deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse
	deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted
	deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security universe
	deb http://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security multiverse

	2.3 最后更新源和更新已安装的包：
	sudo apt-get update && sudo apt-get upgrade && sudo apt autoremove
	
3 GTX 1070驱动
	3.1 安装 Nvidia 驱动 375.66
	若已安装，则先要卸载掉原来的版本
	sudo apt-get --purge remove nvidia*
	
	sudo add-apt-repository ppa:graphics-drivers/ppa
nvidia驱动下载地址：https://www.nvidia.cn/Download/Find.aspx?lang=cn
下载版本为：NVIDIA-Linux-x86_64-440.36.run
	sudo chmod +x NVIDIA-Linux-x86_64-440.36.run
	
	### 禁止nouveau
	sudo bash -c "echo blacklist nouveau" > /etc/modprobe.d/blacklist-nvidia-nouveau.conf"
	sudo bash -c "echo options nouveau modeset=0" > /etc/modprobe.d/blacklist-nvidia-nouveau.conf"

	sudo service lightdm stop  ##关闭x-server
	sudo ./NVIDIA-Linux-x86_64-440.36.run
	sudo apt-get install mesa-common-dev freeglut3-dev build-essential
	
	重启
	sudo reboot
	nvidia-smi   #查看GPU的使用情况
	nvidia-settings   #看是否安装成功
	
4 cuda9.0下载与安装
	4.1 下载最新版本的cuda
	https://developer.nvidia.com/cuda-downloads
	cuda-9.0版本：https://developer.nvidia.com/cuda-90-download-archive?target_os=Linux&target_arch=x86_64&target_distro=Ubuntu&target_version=1604&target_type=deblocal
		cd /data/ubuntu
	运行runfile文件：
		sudo dpkg -i cuda-repo-ubuntu1604-9-0-local-rc_9.0.103-1_amd64.deb
		sudo apt-key add /var/cuda-repo-9-0-local-rc/7fa2af80.pub
	sudo apt-get update && sudo apt-get install cuda
	
安装完毕后，再声明一下环境变量，并将其写入到 ~/.bashrc 的尾部:
	sudo gedit ~/.bashrc
	
	export PATH=/usr/local/cuda/bin${PATH:+:${PATH}}
	export LD_LIBRARY_PATH=/usr/local/cuda/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
	export CUDA_HOME=/usr/local/cuda
	
	source ~/.bashrc
	
	设置环境变量和动态链接库，在命令行输入：
	sudo gedit /etc/profile
	export PATH=$PATH:/usr/local/cuda/bin

	source /etc/profile
	
	保存之后，创建链接文件：
	sudo gedit /etc/ld.so.conf.d/cuda.conf
	在打开的文件中添加如下语句：
	/usr/local/cuda/lib64
	然后执行
	sudo ldconfig
	使链接立即生效。

	4.3 判断cuda是否安装成功
		nvcc --version

	测试cuda的Samples
	cd /usr/local/cuda-9.0/samples/1_Utilities/deviceQuery
	sudo make
	sudo ./deviceQuery
	如果显示的是一些关于GPU的信息，则说明安装成功了。
	sudo chown root:123456 /usr/bin/sudo
	sudo chmod 4755     /usr/bin/sudo
	
5 使用Cudnn加速
        我们去官网下载与cuda8.0匹配的cudnn，https://developer.nvidia.com/cudnn，我下载的是cudnn v7 for cuda9.0
        直接将文件解压，拷贝到cuda相应的文件夹下即可
[plain] view plain copy 在CODE上查看代码片派生到我的代码片
  cd /home/test/zjt/ubuntu
$ sudo tar xvzf cudnn-9.0-linux-x64-v7.tgz
sudo chown lyy cuda/ -R
sudo cp cuda/include/cudnn.h /usr/local/cuda/include && sudo cp cuda/lib64/*.* /usr/local/cuda/lib64 && sudo chmod a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*

6 安装的问题
	6.1 Installing the CUDA Toolkit in /usr/local/cuda-9.0 ...
	Missing recommended library: libGLU.so
	Missing recommended library: libX11.so
	Missing recommended library: libXi.so
	Missing recommended library: libXmu.so
	解决办法：
	sudo apt-get install libglu1-mesa libxi-dev libxmu-dev libglu1-mesa-dev
	
	6.2 动态链接库
	/sbin/ldconfig.real: /usr/lib/nvidia-375/libEGL.so.1 不是符号连接
	/sbin/ldconfig.real: /usr/lib32/nvidia-375/libEGL.so.1 不是符号连接

	原因：
	系统找的是一个符号连接，而不是一个文件。
	解决方法：
	sudo mv /usr/lib/nvidia-375/libEGL.so.1 /usr/lib/nvidia-375/libEGL.so.1.org
	sudo mv /usr/lib32/nvidia-375/libEGL.so.1 /usr/lib32/nvidia-375/libEGL.so.1.org
	sudo ln -s /usr/lib/nvidia-375/libEGL.so.375.82 /usr/lib/nvidia-375/libEGL.so.1
	sudo ln -s /usr/lib32/nvidia-375/libEGL.so.375.82 /usr/lib32/nvidia-375/libEGL.so.1
	
	6.3 关闭GUI界面
	sudo service lightdm stop   %屏幕会黑掉  
	ctrl+alt+F1                 %进入命令行界面

	6.4 ImportError: libcudnn.so.6: cannot open shared object file: No such file or directory
	
7 查看cuda和cudnn的版本
查看nvidia驱动版本：
cat /proc/driver/nvidia/version

查看 CUDA 版本：
cat /usr/local/cuda/version.txt

查看 CUDNN 版本：
cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2

查询显卡的compute capability值
https://developer.nvidia.com/cuda-gpus

8 cuda多版本切换
sudo ln -sf /usr/local/cuda-9.0 /usr/local/cuda

9 ubuntu16.04配置nccl
参考文档：http://blog.fcj.one/ubuntu-nccl2.html
1 环境要求
	glibc 2.19或更高
	CUDA 8.0或更高版本
	NCCL支持所有具有3.0或更高计算能力的CUDA设备。如何查看所有NVIDIA GPU的计算能力?
2 安装NCCL
为了下载NCCL，请确保您已注册NVIDIA开发者账号。
打开NVIDIA NCCL主页：https://developer.nvidia.com/nccl
点击下载。
完成简短调查问卷并点击提交。
接受条款和条件。查看NCCL显示的可用下载版本列表。
选择您想要安装的NCCL版本。显示可用版本列表。根据您使用的Linux发行版以选择正确的软件包。
Ubuntu 14.04 LTS和Ubuntu 16.04 LTS
在Ubuntu上安装NCCL需要您首先向包含NCCL软件包的APT系统添加存储库，然后通过APT 安装NCCL软件包，有两个存储库可用——本地存储库和网络存储库。建议选择更新版本以便在发布新版本时轻松升级。

安装存储库
对于本地NCCL存储库：sudo dpkg -i nccl-repo-<version>.deb
对于网络存储库：sudo dpkg -i nvidia-machine-learning-repo-<version>.deb

更新APT数据库：sudo apt update

利用APT安装libnccl2。此外，如果您需要使用NCCL编译应用程序，则同时安装 libnccl-dev包。
如果您正在使用网络存储库，则使用以下命令。
　　sudo apt install libnccl2 libnccl-dev
如果您希望保留较旧版本的CUDA，请指定特定版本，例如：
　　sudo apt-get install libnccl2=2.0.0-1+cuda8.0 libnccl-dev=2.0.0-1+cuda8.0
请参阅下载页面以了解确切的软件包版本。
